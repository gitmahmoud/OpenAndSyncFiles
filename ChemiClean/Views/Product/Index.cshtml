@model PagedList.IPagedList<DAL.tblProduct>

@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Product Name")
        </th>
        <th>
            @Html.DisplayName("Supplier Name")
        </th>
        <th>
            @Html.DisplayName("updated in last 3 days")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SupplierName)
        </td>    
        <td>
            @if (item.LastSyncDate.HasValue && (DateTime.Now - item.LastSyncDate.Value).Days <= 3)
            {
                <span>Yes</span>
            }
            else
            {
                <span>No</span>

                
            }

        </td>
        <td>   
            @if (item.tblFile != null)
            {
                @Html.ActionLink("Open File", "OpenFile", new { id = item.Id })
            }
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))